/******************************************************************************\
FILE:           stimuli.zm
AUTHOR:         Theo Veenker (UiL-OTS) <T.J.G.Veenker@uu.nl>
ADAPTED BY:     Chris van Run

DESCRIPTION:

Defines the formats of item table(s) and provides the actual content of
the item table(s) i.e. stimulus information.


HISTORY:
2012-03-20 TV   Created.
2014-05-26 CvR	Adapted (created an array reference for test_items)

\******************************************************************************/

enum ItemType {
    TYPE_A,         // Soundfile with an A type stimulus
    TYPE_B          // same with B type of stimulus
};

// Item record used for the test phase item table.
record TestItem
{
    int    item_id; // This maps the item_number back to the item tables
    string tokens;  // target sequence of tokens, separated by commas
    string types;   // mapping of the target sequence to types
};

// This describes a part from the test the button 
record ButtonItem
{
    ItemType    item;
    string      fn;
};


// fill with stimuli for the press-the-button part.
ButtonItem[..] items_a  =
{
    {TYPE_A, "A1.wav"},
    {TYPE_A, "A4.wav"},
    {TYPE_A, "A10.wav"},
    {TYPE_A, "A7.wav"},
    {TYPE_A, "A15.wav"},
    {TYPE_A, "A17.wav"}
};

ButtonItem[..] items_b =
{
    {TYPE_B, "B5.wav"},
    {TYPE_B, "B11.wav"},
    {TYPE_B, "B3.wav"},
    {TYPE_B, "B13.wav"},
    {TYPE_B, "B16.wav"},
    {TYPE_B, "B7.wav"}
};


//Sequences for the pre_test.
TestItem[..] pretest_sequences = 
{
    {1 ,"A8"   , "A"},
    {2 ,"A11"  , "A"},
    {3 ,"B4"   , "B"},
    {4 ,"B2"   , "B"},
    {5 ,"B13"  , "B"},
    {6 ,"A16"  , "A"},
    {7 ,"B1"   , "B"},
    {8 ,"A4"   , "A"},
    {9 ,"B8"   , "B"},
    {10,"A12"  , "A"},
    {11,"B17"  , "B"},
    {12,"A3"   , "A"},
};

// Practice items.
TestItem[..] practice_sequences = 
{
    {1 ,"A1,A4"        , "AA"},
    {2 ,"B10,A2"       , "BA"},
    {3 ,"B3,A5,B12"    , "BAB"},
    {4 ,"B2,B4,A11"    , "BBA"},
};


// Test Items They must be formatted similar to the practice items.
// So separate the names of the files without directory and extension
// separated by a comma.
TestItem[..] seq_block1 = 
{
    {1 ,"A8,A3"    , "AA"},
    {2 ,"B11,B14"  , "BB"},
    {3 ,"A12,B13"  , "AB"},
    {4 ,"B6,B17"   , "BB"},
    {5 ,"B1,A16"   , "BA"},
    {6 ,"A17,A7"   , "AA"},
    {7 ,"B5,A10"   , "BA"},
    {8 ,"A11,B16"  , "AB"},
};

TestItem[..] seq_block2 =
{
    {1 ,"A4,A11,B8"    , "AAB"}, 
    {2 ,"A6,B3,B10"    , "ABB"}, 
    {3 ,"B5,B7,A14"    , "BBA"}, 
    {4 ,"A16,B4,A12"   , "ABA"}, 
    {5 ,"B3,A13,A9"    , "BAA"}, 
    {6 ,"A5,A15,A2"    , "AAA"}, 
    {7 ,"B14,A18,B10"  , "BAB"}, 
    {8 ,"B16,B6,B1"    , "BBB"}, 
};

TestItem[..] seq_block3 =
{
    {1 ,"A6,A7,B15,A18"   , "AABA"}, 
    {2 ,"A9,A10,B1,B13"   , "AABB"}, 
    {3 ,"B1,A15,A12,B8"   , "BAAB"},
    {4 ,"A11,B16,A1,A18"  , "ABAA"},
    {5 ,"B7,A4,A14,A2"    , "BAAA"},
    {6 ,"A16,B13,B6,A8"   , "ABBA"},
    {7 ,"B4,B3,A13,B7"    , "BBAB"},
    {8 ,"B11,A17,B3,B5"   , "BABB"},
};

