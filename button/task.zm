
import instructions;
import stimuli;
import button_page;

Block task
{
    int nth_practice; // Keep track of the nth time we run this task.
    int nth_button;
    int nth_a_pressed;
    int nth_b_pressed;

    void update_counts(int value)
    {
        nth_button++;
        if (value == 0)
            nth_a_pressed++;
        if (value == 1)
            nth_b_pressed++;
    }

    // just a blank page to start with.
    Part
    {
        on_event:entry()
        {
            blank_page.action_auto(this, 500ms);
        }
    }

    Part instructions
    {
        on_event:entry()
        {
            control.button_box.enable_all_buttons(CONTINUE);
            pause_page.set_text(INSTRUCTION);
            pause_page.action(this);
        }
    }

    Part blank
    {
        on_event:entry()
        {
            blank_page.action_auto(this, 500ms);
        }
    }

    TransientPart setup_button_page
    {
        on_event:entry()
        {
            button_page.setup(false, true, PROMPT);
        }
    }
        
    Trial trial
    {
        on_event:entry()
        {
            button_page.action(this, reference_time);
        }

        on_event:exit()
        {

            ButtonOutput output;
            output.repetition = nth_practice;
            output.nth_button = ++nth_button;
            if (button_page.answer == 0) {
                output.a_pressed = ++nth_a_pressed;
                output.svalue = "A";
            }
            if (button_page.answer == 1) {
                output.b_pressed = ++nth_b_pressed;
                output.svalue = "B";
            }
            output.value = button_page.answer;
            button_output_append(output);
        }
    }

    TransientPart test_continue
    {
        on_event:entry()
        {
            if (!button_page.continue_pressed)
                trial.enter();
            else {
                button_page.cleanup();
                leave_pressing.enter();
            }
        }
    }
    
    // Show a blank page prior to going to the next stimulus / instructions.
    Part leave_pressing
    {
        on_event:entry()
        {
            control.button_box.enable_all_buttons(CONTINUE);
            blank_page.action_auto(this, 500ms);
        }
    }

}

void action(Part caller, int nth_practice)
{
    task.nth_practice = nth_practice;
    task.enter(caller);
}


